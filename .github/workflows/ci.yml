name: CI

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  super-linter:
    permissions:
      contents: read # to fetch code (actions/checkout)
      checks: write # to mark the status of each individual linter run
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      -
        name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_BASH: true
          VALIDATE_PHP_BUILTIN: true

          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  stan:
    name: PHPStan Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6 # or alternative dependency management
      - uses: php-actions/phpstan@master
        with:
          memory_limit: 4G

  phpstan:
    name: PHP Static Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [8.1]
    steps:
      -
        name: Checkout Code
        uses: actions/checkout@v3

      -
        name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: none

      -
        name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      -
        name: Cache composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}-${{ secrets.CACHE_VERSION }}-

      -
        name: Composer install
        run: composer install --prefer-dist --no-interaction --no-progress

  phpstan-dev:
    strategy:
      matrix:
        php: ["8.1"]
        laravel: ["^9.0"]

    name: "P${{ matrix.php }} - L${{ matrix.laravel }}"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "dom, curl, libxml, mbstring, zip, fileinfo"
          tools: "composer:v2"
          coverage: "none"

      - name: "Change Composer config minimum-stability"
        run: "composer config minimum-stability stable"

      - name: "Change Composer config prefer-stable"
        run: "composer config prefer-stable false"

      - name: "Require PHPStan dev version"
        run: "composer require phpstan/phpstan:@dev --no-update --no-interaction --no-progress"

      - name: "Install highest dependencies from composer.json"
        run: "composer update --with='illuminate/contracts:${{ matrix.laravel }}' --no-interaction --no-progress"

      - name: "Execute static analysis"
        run: "composer run-script test:types"
